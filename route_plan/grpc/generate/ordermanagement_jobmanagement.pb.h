// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ordermanagement_jobmanagement.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ordermanagement_5fjobmanagement_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ordermanagement_5fjobmanagement_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ordermanagement_5fjobmanagement_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ordermanagement_5fjobmanagement_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ordermanagement_5fjobmanagement_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_ordermanagement_5fjobmanagement_2eproto_metadata_getter(int index);
namespace grpc_ordermanagement {
class Reply_SetOrderState;
struct Reply_SetOrderStateDefaultTypeInternal;
extern Reply_SetOrderStateDefaultTypeInternal _Reply_SetOrderState_default_instance_;
class Request_SetOrderState;
struct Request_SetOrderStateDefaultTypeInternal;
extern Request_SetOrderStateDefaultTypeInternal _Request_SetOrderState_default_instance_;
}  // namespace grpc_ordermanagement
PROTOBUF_NAMESPACE_OPEN
template<> ::grpc_ordermanagement::Reply_SetOrderState* Arena::CreateMaybeMessage<::grpc_ordermanagement::Reply_SetOrderState>(Arena*);
template<> ::grpc_ordermanagement::Request_SetOrderState* Arena::CreateMaybeMessage<::grpc_ordermanagement::Request_SetOrderState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpc_ordermanagement {

enum Request_SetOrderState_TYPE : int {
  Request_SetOrderState_TYPE_FINISH = 0,
  Request_SetOrderState_TYPE_CANCEL = 1,
  Request_SetOrderState_TYPE_Request_SetOrderState_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Request_SetOrderState_TYPE_Request_SetOrderState_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Request_SetOrderState_TYPE_IsValid(int value);
constexpr Request_SetOrderState_TYPE Request_SetOrderState_TYPE_TYPE_MIN = Request_SetOrderState_TYPE_FINISH;
constexpr Request_SetOrderState_TYPE Request_SetOrderState_TYPE_TYPE_MAX = Request_SetOrderState_TYPE_CANCEL;
constexpr int Request_SetOrderState_TYPE_TYPE_ARRAYSIZE = Request_SetOrderState_TYPE_TYPE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Request_SetOrderState_TYPE_descriptor();
template<typename T>
inline const std::string& Request_SetOrderState_TYPE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Request_SetOrderState_TYPE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Request_SetOrderState_TYPE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Request_SetOrderState_TYPE_descriptor(), enum_t_value);
}
inline bool Request_SetOrderState_TYPE_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Request_SetOrderState_TYPE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Request_SetOrderState_TYPE>(
    Request_SetOrderState_TYPE_descriptor(), name, value);
}
// ===================================================================

class Request_SetOrderState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_ordermanagement.Request_SetOrderState) */ {
 public:
  inline Request_SetOrderState() : Request_SetOrderState(nullptr) {}
  virtual ~Request_SetOrderState();
  explicit constexpr Request_SetOrderState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Request_SetOrderState(const Request_SetOrderState& from);
  Request_SetOrderState(Request_SetOrderState&& from) noexcept
    : Request_SetOrderState() {
    *this = ::std::move(from);
  }

  inline Request_SetOrderState& operator=(const Request_SetOrderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request_SetOrderState& operator=(Request_SetOrderState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Request_SetOrderState& default_instance() {
    return *internal_default_instance();
  }
  static inline const Request_SetOrderState* internal_default_instance() {
    return reinterpret_cast<const Request_SetOrderState*>(
               &_Request_SetOrderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Request_SetOrderState& a, Request_SetOrderState& b) {
    a.Swap(&b);
  }
  inline void Swap(Request_SetOrderState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request_SetOrderState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Request_SetOrderState* New() const final {
    return CreateMaybeMessage<Request_SetOrderState>(nullptr);
  }

  Request_SetOrderState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Request_SetOrderState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Request_SetOrderState& from);
  void MergeFrom(const Request_SetOrderState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_SetOrderState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_ordermanagement.Request_SetOrderState";
  }
  protected:
  explicit Request_SetOrderState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ordermanagement_5fjobmanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef Request_SetOrderState_TYPE TYPE;
  static constexpr TYPE FINISH =
    Request_SetOrderState_TYPE_FINISH;
  static constexpr TYPE CANCEL =
    Request_SetOrderState_TYPE_CANCEL;
  static inline bool TYPE_IsValid(int value) {
    return Request_SetOrderState_TYPE_IsValid(value);
  }
  static constexpr TYPE TYPE_MIN =
    Request_SetOrderState_TYPE_TYPE_MIN;
  static constexpr TYPE TYPE_MAX =
    Request_SetOrderState_TYPE_TYPE_MAX;
  static constexpr int TYPE_ARRAYSIZE =
    Request_SetOrderState_TYPE_TYPE_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TYPE_descriptor() {
    return Request_SetOrderState_TYPE_descriptor();
  }
  template<typename T>
  static inline const std::string& TYPE_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TYPE>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TYPE_Name.");
    return Request_SetOrderState_TYPE_Name(enum_t_value);
  }
  static inline bool TYPE_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      TYPE* value) {
    return Request_SetOrderState_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNumberFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // int32 number = 1;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::int32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .grpc_ordermanagement.Request_SetOrderState.TYPE type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::grpc_ordermanagement::Request_SetOrderState_TYPE type() const;
  void set_type(::grpc_ordermanagement::Request_SetOrderState_TYPE value);
  private:
  ::grpc_ordermanagement::Request_SetOrderState_TYPE _internal_type() const;
  void _internal_set_type(::grpc_ordermanagement::Request_SetOrderState_TYPE value);
  public:

  // @@protoc_insertion_point(class_scope:grpc_ordermanagement.Request_SetOrderState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 number_;
  int type_;
  friend struct ::TableStruct_ordermanagement_5fjobmanagement_2eproto;
};
// -------------------------------------------------------------------

class Reply_SetOrderState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_ordermanagement.Reply_SetOrderState) */ {
 public:
  inline Reply_SetOrderState() : Reply_SetOrderState(nullptr) {}
  virtual ~Reply_SetOrderState();
  explicit constexpr Reply_SetOrderState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Reply_SetOrderState(const Reply_SetOrderState& from);
  Reply_SetOrderState(Reply_SetOrderState&& from) noexcept
    : Reply_SetOrderState() {
    *this = ::std::move(from);
  }

  inline Reply_SetOrderState& operator=(const Reply_SetOrderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reply_SetOrderState& operator=(Reply_SetOrderState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Reply_SetOrderState& default_instance() {
    return *internal_default_instance();
  }
  static inline const Reply_SetOrderState* internal_default_instance() {
    return reinterpret_cast<const Reply_SetOrderState*>(
               &_Reply_SetOrderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Reply_SetOrderState& a, Reply_SetOrderState& b) {
    a.Swap(&b);
  }
  inline void Swap(Reply_SetOrderState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Reply_SetOrderState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Reply_SetOrderState* New() const final {
    return CreateMaybeMessage<Reply_SetOrderState>(nullptr);
  }

  Reply_SetOrderState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Reply_SetOrderState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Reply_SetOrderState& from);
  void MergeFrom(const Reply_SetOrderState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Reply_SetOrderState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_ordermanagement.Reply_SetOrderState";
  }
  protected:
  explicit Reply_SetOrderState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ordermanagement_5fjobmanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReplySetFieldNumber = 1,
  };
  // bool reply_set = 1;
  bool has_reply_set() const;
  private:
  bool _internal_has_reply_set() const;
  public:
  void clear_reply_set();
  bool reply_set() const;
  void set_reply_set(bool value);
  private:
  bool _internal_reply_set() const;
  void _internal_set_reply_set(bool value);
  public:

  // @@protoc_insertion_point(class_scope:grpc_ordermanagement.Reply_SetOrderState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool reply_set_;
  friend struct ::TableStruct_ordermanagement_5fjobmanagement_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request_SetOrderState

// int32 number = 1;
inline bool Request_SetOrderState::_internal_has_number() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Request_SetOrderState::has_number() const {
  return _internal_has_number();
}
inline void Request_SetOrderState::clear_number() {
  number_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_SetOrderState::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_SetOrderState::number() const {
  // @@protoc_insertion_point(field_get:grpc_ordermanagement.Request_SetOrderState.number)
  return _internal_number();
}
inline void Request_SetOrderState::_internal_set_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  number_ = value;
}
inline void Request_SetOrderState::set_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:grpc_ordermanagement.Request_SetOrderState.number)
}

// .grpc_ordermanagement.Request_SetOrderState.TYPE type = 2;
inline bool Request_SetOrderState::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Request_SetOrderState::has_type() const {
  return _internal_has_type();
}
inline void Request_SetOrderState::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::grpc_ordermanagement::Request_SetOrderState_TYPE Request_SetOrderState::_internal_type() const {
  return static_cast< ::grpc_ordermanagement::Request_SetOrderState_TYPE >(type_);
}
inline ::grpc_ordermanagement::Request_SetOrderState_TYPE Request_SetOrderState::type() const {
  // @@protoc_insertion_point(field_get:grpc_ordermanagement.Request_SetOrderState.type)
  return _internal_type();
}
inline void Request_SetOrderState::_internal_set_type(::grpc_ordermanagement::Request_SetOrderState_TYPE value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void Request_SetOrderState::set_type(::grpc_ordermanagement::Request_SetOrderState_TYPE value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:grpc_ordermanagement.Request_SetOrderState.type)
}

// -------------------------------------------------------------------

// Reply_SetOrderState

// bool reply_set = 1;
inline bool Reply_SetOrderState::_internal_has_reply_set() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Reply_SetOrderState::has_reply_set() const {
  return _internal_has_reply_set();
}
inline void Reply_SetOrderState::clear_reply_set() {
  reply_set_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool Reply_SetOrderState::_internal_reply_set() const {
  return reply_set_;
}
inline bool Reply_SetOrderState::reply_set() const {
  // @@protoc_insertion_point(field_get:grpc_ordermanagement.Reply_SetOrderState.reply_set)
  return _internal_reply_set();
}
inline void Reply_SetOrderState::_internal_set_reply_set(bool value) {
  _has_bits_[0] |= 0x00000001u;
  reply_set_ = value;
}
inline void Reply_SetOrderState::set_reply_set(bool value) {
  _internal_set_reply_set(value);
  // @@protoc_insertion_point(field_set:grpc_ordermanagement.Reply_SetOrderState.reply_set)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc_ordermanagement

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::grpc_ordermanagement::Request_SetOrderState_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc_ordermanagement::Request_SetOrderState_TYPE>() {
  return ::grpc_ordermanagement::Request_SetOrderState_TYPE_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ordermanagement_5fjobmanagement_2eproto

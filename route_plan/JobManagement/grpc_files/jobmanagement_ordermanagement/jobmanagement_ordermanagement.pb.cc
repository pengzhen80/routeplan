// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jobmanagement_ordermanagement.proto

#include "jobmanagement_ordermanagement.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_jobmanagement {
constexpr Request_Order_Goods_Info::Request_Order_Goods_Info(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Request_Order_Goods_InfoDefaultTypeInternal {
  constexpr Request_Order_Goods_InfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Request_Order_Goods_InfoDefaultTypeInternal() {}
  union {
    Request_Order_Goods_Info _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Request_Order_Goods_InfoDefaultTypeInternal _Request_Order_Goods_Info_default_instance_;
constexpr Request_Order_Order_Data::Request_Order_Order_Data(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : goods_info_(nullptr)
  , goods_pos_(0)
  , target_pos_(0){}
struct Request_Order_Order_DataDefaultTypeInternal {
  constexpr Request_Order_Order_DataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Request_Order_Order_DataDefaultTypeInternal() {}
  union {
    Request_Order_Order_Data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Request_Order_Order_DataDefaultTypeInternal _Request_Order_Order_Data_default_instance_;
constexpr Request_Order::Request_Order(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(nullptr)
  , number_(0)
  , type_(0)

  , car_id_(0){}
struct Request_OrderDefaultTypeInternal {
  constexpr Request_OrderDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Request_OrderDefaultTypeInternal() {}
  union {
    Request_Order _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Request_OrderDefaultTypeInternal _Request_Order_default_instance_;
constexpr Reply_Act::Reply_Act(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reply_act_(false){}
struct Reply_ActDefaultTypeInternal {
  constexpr Reply_ActDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Reply_ActDefaultTypeInternal() {}
  union {
    Reply_Act _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Reply_ActDefaultTypeInternal _Reply_Act_default_instance_;
constexpr Reply_Cancel::Reply_Cancel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reply_cancel_(false){}
struct Reply_CancelDefaultTypeInternal {
  constexpr Reply_CancelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Reply_CancelDefaultTypeInternal() {}
  union {
    Reply_Cancel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Reply_CancelDefaultTypeInternal _Reply_Cancel_default_instance_;
}  // namespace grpc_jobmanagement
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_jobmanagement_5fordermanagement_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_jobmanagement_5fordermanagement_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_jobmanagement_5fordermanagement_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_jobmanagement_5fordermanagement_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Goods_Info, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Goods_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Goods_Info, name_),
  0,
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Order_Data, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Order_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Order_Data, goods_info_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Order_Data, goods_pos_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order_Order_Data, target_pos_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order, number_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order, type_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order, data_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Request_Order, car_id_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Reply_Act, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Reply_Act, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Reply_Act, reply_act_),
  0,
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Reply_Cancel, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Reply_Cancel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_jobmanagement::Reply_Cancel, reply_cancel_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::grpc_jobmanagement::Request_Order_Goods_Info)},
  { 7, 15, sizeof(::grpc_jobmanagement::Request_Order_Order_Data)},
  { 18, 27, sizeof(::grpc_jobmanagement::Request_Order)},
  { 31, 37, sizeof(::grpc_jobmanagement::Reply_Act)},
  { 38, 44, sizeof(::grpc_jobmanagement::Reply_Cancel)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_jobmanagement::_Request_Order_Goods_Info_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_jobmanagement::_Request_Order_Order_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_jobmanagement::_Request_Order_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_jobmanagement::_Reply_Act_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_jobmanagement::_Reply_Cancel_default_instance_),
};

const char descriptor_table_protodef_jobmanagement_5fordermanagement_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#jobmanagement_ordermanagement.proto\022\022g"
  "rpc_jobmanagement\"\351\003\n\rRequest_Order\022\023\n\006n"
  "umber\030\001 \001(\005H\000\210\001\001\0229\n\004type\030\002 \001(\0162&.grpc_jo"
  "bmanagement.Request_Order.TYPEH\001\210\001\001\022\?\n\004d"
  "ata\030\003 \001(\0132,.grpc_jobmanagement.Request_O"
  "rder.Order_DataH\002\210\001\001\022\023\n\006car_id\030\004 \001(\005H\003\210\001"
  "\001\032(\n\nGoods_Info\022\021\n\004name\030\001 \001(\tH\000\210\001\001B\007\n\005_n"
  "ame\032\260\001\n\nOrder_Data\022E\n\ngoods_info\030\001 \001(\0132,"
  ".grpc_jobmanagement.Request_Order.Goods_"
  "InfoH\000\210\001\001\022\026\n\tgoods_pos\030\002 \001(\005H\001\210\001\001\022\027\n\ntar"
  "get_pos\030\003 \001(\005H\002\210\001\001B\r\n\013_goods_infoB\014\n\n_go"
  "ods_posB\r\n\013_target_pos\"-\n\004TYPE\022\021\n\rMEAL_D"
  "ELIVERY\020\000\022\022\n\016MEAL_RECEPTION\020\001B\t\n\007_number"
  "B\007\n\005_typeB\007\n\005_dataB\t\n\007_car_id\"1\n\tReply_A"
  "ct\022\026\n\treply_act\030\001 \001(\010H\000\210\001\001B\014\n\n_reply_act"
  "\":\n\014Reply_Cancel\022\031\n\014reply_cancel\030\001 \001(\010H\000"
  "\210\001\001B\017\n\r_reply_cancel2\315\001\n%JobManagement_O"
  "rderManagement_Service\022N\n\010ActOrder\022!.grp"
  "c_jobmanagement.Request_Order\032\035.grpc_job"
  "management.Reply_Act\"\000\022T\n\013CancelOrder\022!."
  "grpc_jobmanagement.Request_Order\032 .grpc_"
  "jobmanagement.Reply_Cancel\"\000b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_jobmanagement_5fordermanagement_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_jobmanagement_5fordermanagement_2eproto = {
  false, false, 876, descriptor_table_protodef_jobmanagement_5fordermanagement_2eproto, "jobmanagement_ordermanagement.proto", 
  &descriptor_table_jobmanagement_5fordermanagement_2eproto_once, nullptr, 0, 5,
  schemas, file_default_instances, TableStruct_jobmanagement_5fordermanagement_2eproto::offsets,
  file_level_metadata_jobmanagement_5fordermanagement_2eproto, file_level_enum_descriptors_jobmanagement_5fordermanagement_2eproto, file_level_service_descriptors_jobmanagement_5fordermanagement_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_jobmanagement_5fordermanagement_2eproto);
  return descriptor_table_jobmanagement_5fordermanagement_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_jobmanagement_5fordermanagement_2eproto(&descriptor_table_jobmanagement_5fordermanagement_2eproto);
namespace grpc_jobmanagement {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Request_Order_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_jobmanagement_5fordermanagement_2eproto);
  return file_level_enum_descriptors_jobmanagement_5fordermanagement_2eproto[0];
}
bool Request_Order_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Request_Order_TYPE Request_Order::MEAL_DELIVERY;
constexpr Request_Order_TYPE Request_Order::MEAL_RECEPTION;
constexpr Request_Order_TYPE Request_Order::TYPE_MIN;
constexpr Request_Order_TYPE Request_Order::TYPE_MAX;
constexpr int Request_Order::TYPE_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class Request_Order_Goods_Info::_Internal {
 public:
  using HasBits = decltype(std::declval<Request_Order_Goods_Info>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Request_Order_Goods_Info::Request_Order_Goods_Info(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_jobmanagement.Request_Order.Goods_Info)
}
Request_Order_Goods_Info::Request_Order_Goods_Info(const Request_Order_Goods_Info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_jobmanagement.Request_Order.Goods_Info)
}

void Request_Order_Goods_Info::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Request_Order_Goods_Info::~Request_Order_Goods_Info() {
  // @@protoc_insertion_point(destructor:grpc_jobmanagement.Request_Order.Goods_Info)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Request_Order_Goods_Info::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Request_Order_Goods_Info::ArenaDtor(void* object) {
  Request_Order_Goods_Info* _this = reinterpret_cast< Request_Order_Goods_Info* >(object);
  (void)_this;
}
void Request_Order_Goods_Info::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Request_Order_Goods_Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Request_Order_Goods_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_jobmanagement.Request_Order.Goods_Info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request_Order_Goods_Info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_jobmanagement.Request_Order.Goods_Info.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request_Order_Goods_Info::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_jobmanagement.Request_Order.Goods_Info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_jobmanagement.Request_Order.Goods_Info.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_jobmanagement.Request_Order.Goods_Info)
  return target;
}

size_t Request_Order_Goods_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_jobmanagement.Request_Order.Goods_Info)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_Order_Goods_Info::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_jobmanagement.Request_Order.Goods_Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_Order_Goods_Info* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request_Order_Goods_Info>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_jobmanagement.Request_Order.Goods_Info)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_jobmanagement.Request_Order.Goods_Info)
    MergeFrom(*source);
  }
}

void Request_Order_Goods_Info::MergeFrom(const Request_Order_Goods_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_jobmanagement.Request_Order.Goods_Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _internal_set_name(from._internal_name());
  }
}

void Request_Order_Goods_Info::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_jobmanagement.Request_Order.Goods_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_Order_Goods_Info::CopyFrom(const Request_Order_Goods_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_jobmanagement.Request_Order.Goods_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_Order_Goods_Info::IsInitialized() const {
  return true;
}

void Request_Order_Goods_Info::InternalSwap(Request_Order_Goods_Info* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Request_Order_Goods_Info::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Request_Order_Order_Data::_Internal {
 public:
  using HasBits = decltype(std::declval<Request_Order_Order_Data>()._has_bits_);
  static const ::grpc_jobmanagement::Request_Order_Goods_Info& goods_info(const Request_Order_Order_Data* msg);
  static void set_has_goods_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_goods_pos(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_pos(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::grpc_jobmanagement::Request_Order_Goods_Info&
Request_Order_Order_Data::_Internal::goods_info(const Request_Order_Order_Data* msg) {
  return *msg->goods_info_;
}
Request_Order_Order_Data::Request_Order_Order_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_jobmanagement.Request_Order.Order_Data)
}
Request_Order_Order_Data::Request_Order_Order_Data(const Request_Order_Order_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_goods_info()) {
    goods_info_ = new ::grpc_jobmanagement::Request_Order_Goods_Info(*from.goods_info_);
  } else {
    goods_info_ = nullptr;
  }
  ::memcpy(&goods_pos_, &from.goods_pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_pos_) -
    reinterpret_cast<char*>(&goods_pos_)) + sizeof(target_pos_));
  // @@protoc_insertion_point(copy_constructor:grpc_jobmanagement.Request_Order.Order_Data)
}

void Request_Order_Order_Data::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&goods_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_pos_) -
    reinterpret_cast<char*>(&goods_info_)) + sizeof(target_pos_));
}

Request_Order_Order_Data::~Request_Order_Order_Data() {
  // @@protoc_insertion_point(destructor:grpc_jobmanagement.Request_Order.Order_Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Request_Order_Order_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete goods_info_;
}

void Request_Order_Order_Data::ArenaDtor(void* object) {
  Request_Order_Order_Data* _this = reinterpret_cast< Request_Order_Order_Data* >(object);
  (void)_this;
}
void Request_Order_Order_Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Request_Order_Order_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Request_Order_Order_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_jobmanagement.Request_Order.Order_Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    if (GetArena() == nullptr && goods_info_ != nullptr) {
      delete goods_info_;
    }
    goods_info_ = nullptr;
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&goods_pos_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_pos_) -
        reinterpret_cast<char*>(&goods_pos_)) + sizeof(target_pos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request_Order_Order_Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_jobmanagement.Request_Order.Goods_Info goods_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_goods_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 goods_pos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_goods_pos(&has_bits);
          goods_pos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 target_pos = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_target_pos(&has_bits);
          target_pos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request_Order_Order_Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_jobmanagement.Request_Order.Order_Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_jobmanagement.Request_Order.Goods_Info goods_info = 1;
  if (_internal_has_goods_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::goods_info(this), target, stream);
  }

  // int32 goods_pos = 2;
  if (_internal_has_goods_pos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_goods_pos(), target);
  }

  // int32 target_pos = 3;
  if (_internal_has_target_pos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_target_pos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_jobmanagement.Request_Order.Order_Data)
  return target;
}

size_t Request_Order_Order_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_jobmanagement.Request_Order.Order_Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .grpc_jobmanagement.Request_Order.Goods_Info goods_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *goods_info_);
    }

    // int32 goods_pos = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_goods_pos());
    }

    // int32 target_pos = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_target_pos());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_Order_Order_Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_jobmanagement.Request_Order.Order_Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_Order_Order_Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request_Order_Order_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_jobmanagement.Request_Order.Order_Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_jobmanagement.Request_Order.Order_Data)
    MergeFrom(*source);
  }
}

void Request_Order_Order_Data::MergeFrom(const Request_Order_Order_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_jobmanagement.Request_Order.Order_Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_goods_info()->::grpc_jobmanagement::Request_Order_Goods_Info::MergeFrom(from._internal_goods_info());
    }
    if (cached_has_bits & 0x00000002u) {
      goods_pos_ = from.goods_pos_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_pos_ = from.target_pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_Order_Order_Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_jobmanagement.Request_Order.Order_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_Order_Order_Data::CopyFrom(const Request_Order_Order_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_jobmanagement.Request_Order.Order_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_Order_Order_Data::IsInitialized() const {
  return true;
}

void Request_Order_Order_Data::InternalSwap(Request_Order_Order_Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Request_Order_Order_Data, target_pos_)
      + sizeof(Request_Order_Order_Data::target_pos_)
      - PROTOBUF_FIELD_OFFSET(Request_Order_Order_Data, goods_info_)>(
          reinterpret_cast<char*>(&goods_info_),
          reinterpret_cast<char*>(&other->goods_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Request_Order_Order_Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Request_Order::_Internal {
 public:
  using HasBits = decltype(std::declval<Request_Order>()._has_bits_);
  static void set_has_number(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::grpc_jobmanagement::Request_Order_Order_Data& data(const Request_Order* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_car_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::grpc_jobmanagement::Request_Order_Order_Data&
Request_Order::_Internal::data(const Request_Order* msg) {
  return *msg->data_;
}
Request_Order::Request_Order(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_jobmanagement.Request_Order)
}
Request_Order::Request_Order(const Request_Order& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::grpc_jobmanagement::Request_Order_Order_Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&car_id_) -
    reinterpret_cast<char*>(&number_)) + sizeof(car_id_));
  // @@protoc_insertion_point(copy_constructor:grpc_jobmanagement.Request_Order)
}

void Request_Order::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&car_id_) -
    reinterpret_cast<char*>(&data_)) + sizeof(car_id_));
}

Request_Order::~Request_Order() {
  // @@protoc_insertion_point(destructor:grpc_jobmanagement.Request_Order)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Request_Order::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void Request_Order::ArenaDtor(void* object) {
  Request_Order* _this = reinterpret_cast< Request_Order* >(object);
  (void)_this;
}
void Request_Order::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Request_Order::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Request_Order::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_jobmanagement.Request_Order)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    if (GetArena() == nullptr && data_ != nullptr) {
      delete data_;
    }
    data_ = nullptr;
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&car_id_) -
        reinterpret_cast<char*>(&number_)) + sizeof(car_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request_Order::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_number(&has_bits);
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_jobmanagement.Request_Order.TYPE type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::grpc_jobmanagement::Request_Order_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // .grpc_jobmanagement.Request_Order.Order_Data data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 car_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_car_id(&has_bits);
          car_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request_Order::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_jobmanagement.Request_Order)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (_internal_has_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_number(), target);
  }

  // .grpc_jobmanagement.Request_Order.TYPE type = 2;
  if (_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .grpc_jobmanagement.Request_Order.Order_Data data = 3;
  if (_internal_has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::data(this), target, stream);
  }

  // int32 car_id = 4;
  if (_internal_has_car_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_car_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_jobmanagement.Request_Order)
  return target;
}

size_t Request_Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_jobmanagement.Request_Order)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .grpc_jobmanagement.Request_Order.Order_Data data = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_);
    }

    // int32 number = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_number());
    }

    // .grpc_jobmanagement.Request_Order.TYPE type = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
    }

    // int32 car_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_car_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_Order::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_jobmanagement.Request_Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_Order* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request_Order>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_jobmanagement.Request_Order)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_jobmanagement.Request_Order)
    MergeFrom(*source);
  }
}

void Request_Order::MergeFrom(const Request_Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_jobmanagement.Request_Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_data()->::grpc_jobmanagement::Request_Order_Order_Data::MergeFrom(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      number_ = from.number_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      car_id_ = from.car_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_Order::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_jobmanagement.Request_Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_Order::CopyFrom(const Request_Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_jobmanagement.Request_Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_Order::IsInitialized() const {
  return true;
}

void Request_Order::InternalSwap(Request_Order* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Request_Order, car_id_)
      + sizeof(Request_Order::car_id_)
      - PROTOBUF_FIELD_OFFSET(Request_Order, data_)>(
          reinterpret_cast<char*>(&data_),
          reinterpret_cast<char*>(&other->data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Request_Order::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Reply_Act::_Internal {
 public:
  using HasBits = decltype(std::declval<Reply_Act>()._has_bits_);
  static void set_has_reply_act(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Reply_Act::Reply_Act(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_jobmanagement.Reply_Act)
}
Reply_Act::Reply_Act(const Reply_Act& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_act_ = from.reply_act_;
  // @@protoc_insertion_point(copy_constructor:grpc_jobmanagement.Reply_Act)
}

void Reply_Act::SharedCtor() {
reply_act_ = false;
}

Reply_Act::~Reply_Act() {
  // @@protoc_insertion_point(destructor:grpc_jobmanagement.Reply_Act)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Reply_Act::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Reply_Act::ArenaDtor(void* object) {
  Reply_Act* _this = reinterpret_cast< Reply_Act* >(object);
  (void)_this;
}
void Reply_Act::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Reply_Act::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Reply_Act::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_jobmanagement.Reply_Act)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_act_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Reply_Act::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool reply_act = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_reply_act(&has_bits);
          reply_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Reply_Act::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_jobmanagement.Reply_Act)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reply_act = 1;
  if (_internal_has_reply_act()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_reply_act(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_jobmanagement.Reply_Act)
  return target;
}

size_t Reply_Act::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_jobmanagement.Reply_Act)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool reply_act = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reply_Act::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_jobmanagement.Reply_Act)
  GOOGLE_DCHECK_NE(&from, this);
  const Reply_Act* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Reply_Act>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_jobmanagement.Reply_Act)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_jobmanagement.Reply_Act)
    MergeFrom(*source);
  }
}

void Reply_Act::MergeFrom(const Reply_Act& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_jobmanagement.Reply_Act)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reply_act()) {
    _internal_set_reply_act(from._internal_reply_act());
  }
}

void Reply_Act::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_jobmanagement.Reply_Act)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply_Act::CopyFrom(const Reply_Act& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_jobmanagement.Reply_Act)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply_Act::IsInitialized() const {
  return true;
}

void Reply_Act::InternalSwap(Reply_Act* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(reply_act_, other->reply_act_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Reply_Act::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Reply_Cancel::_Internal {
 public:
  using HasBits = decltype(std::declval<Reply_Cancel>()._has_bits_);
  static void set_has_reply_cancel(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Reply_Cancel::Reply_Cancel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_jobmanagement.Reply_Cancel)
}
Reply_Cancel::Reply_Cancel(const Reply_Cancel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_cancel_ = from.reply_cancel_;
  // @@protoc_insertion_point(copy_constructor:grpc_jobmanagement.Reply_Cancel)
}

void Reply_Cancel::SharedCtor() {
reply_cancel_ = false;
}

Reply_Cancel::~Reply_Cancel() {
  // @@protoc_insertion_point(destructor:grpc_jobmanagement.Reply_Cancel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Reply_Cancel::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Reply_Cancel::ArenaDtor(void* object) {
  Reply_Cancel* _this = reinterpret_cast< Reply_Cancel* >(object);
  (void)_this;
}
void Reply_Cancel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Reply_Cancel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Reply_Cancel::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_jobmanagement.Reply_Cancel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_cancel_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Reply_Cancel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool reply_cancel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_reply_cancel(&has_bits);
          reply_cancel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Reply_Cancel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_jobmanagement.Reply_Cancel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reply_cancel = 1;
  if (_internal_has_reply_cancel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_reply_cancel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_jobmanagement.Reply_Cancel)
  return target;
}

size_t Reply_Cancel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_jobmanagement.Reply_Cancel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool reply_cancel = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reply_Cancel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_jobmanagement.Reply_Cancel)
  GOOGLE_DCHECK_NE(&from, this);
  const Reply_Cancel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Reply_Cancel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_jobmanagement.Reply_Cancel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_jobmanagement.Reply_Cancel)
    MergeFrom(*source);
  }
}

void Reply_Cancel::MergeFrom(const Reply_Cancel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_jobmanagement.Reply_Cancel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reply_cancel()) {
    _internal_set_reply_cancel(from._internal_reply_cancel());
  }
}

void Reply_Cancel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_jobmanagement.Reply_Cancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply_Cancel::CopyFrom(const Reply_Cancel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_jobmanagement.Reply_Cancel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply_Cancel::IsInitialized() const {
  return true;
}

void Reply_Cancel::InternalSwap(Reply_Cancel* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(reply_cancel_, other->reply_cancel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Reply_Cancel::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_jobmanagement
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_jobmanagement::Request_Order_Goods_Info* Arena::CreateMaybeMessage< ::grpc_jobmanagement::Request_Order_Goods_Info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_jobmanagement::Request_Order_Goods_Info >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_jobmanagement::Request_Order_Order_Data* Arena::CreateMaybeMessage< ::grpc_jobmanagement::Request_Order_Order_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_jobmanagement::Request_Order_Order_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_jobmanagement::Request_Order* Arena::CreateMaybeMessage< ::grpc_jobmanagement::Request_Order >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_jobmanagement::Request_Order >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_jobmanagement::Reply_Act* Arena::CreateMaybeMessage< ::grpc_jobmanagement::Reply_Act >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_jobmanagement::Reply_Act >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_jobmanagement::Reply_Cancel* Arena::CreateMaybeMessage< ::grpc_jobmanagement::Reply_Cancel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_jobmanagement::Reply_Cancel >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

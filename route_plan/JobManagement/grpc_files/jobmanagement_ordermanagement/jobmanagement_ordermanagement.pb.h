// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jobmanagement_ordermanagement.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_jobmanagement_5fordermanagement_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_jobmanagement_5fordermanagement_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_jobmanagement_5fordermanagement_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_jobmanagement_5fordermanagement_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_jobmanagement_5fordermanagement_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(int index);
namespace grpc_jobmanagement {
class Reply_Act;
struct Reply_ActDefaultTypeInternal;
extern Reply_ActDefaultTypeInternal _Reply_Act_default_instance_;
class Reply_Cancel;
struct Reply_CancelDefaultTypeInternal;
extern Reply_CancelDefaultTypeInternal _Reply_Cancel_default_instance_;
class Request_Order;
struct Request_OrderDefaultTypeInternal;
extern Request_OrderDefaultTypeInternal _Request_Order_default_instance_;
class Request_Order_Goods_Info;
struct Request_Order_Goods_InfoDefaultTypeInternal;
extern Request_Order_Goods_InfoDefaultTypeInternal _Request_Order_Goods_Info_default_instance_;
class Request_Order_Order_Data;
struct Request_Order_Order_DataDefaultTypeInternal;
extern Request_Order_Order_DataDefaultTypeInternal _Request_Order_Order_Data_default_instance_;
}  // namespace grpc_jobmanagement
PROTOBUF_NAMESPACE_OPEN
template<> ::grpc_jobmanagement::Reply_Act* Arena::CreateMaybeMessage<::grpc_jobmanagement::Reply_Act>(Arena*);
template<> ::grpc_jobmanagement::Reply_Cancel* Arena::CreateMaybeMessage<::grpc_jobmanagement::Reply_Cancel>(Arena*);
template<> ::grpc_jobmanagement::Request_Order* Arena::CreateMaybeMessage<::grpc_jobmanagement::Request_Order>(Arena*);
template<> ::grpc_jobmanagement::Request_Order_Goods_Info* Arena::CreateMaybeMessage<::grpc_jobmanagement::Request_Order_Goods_Info>(Arena*);
template<> ::grpc_jobmanagement::Request_Order_Order_Data* Arena::CreateMaybeMessage<::grpc_jobmanagement::Request_Order_Order_Data>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpc_jobmanagement {

enum Request_Order_TYPE : int {
  Request_Order_TYPE_MEAL_DELIVERY = 0,
  Request_Order_TYPE_MEAL_RECEPTION = 1,
  Request_Order_TYPE_Request_Order_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Request_Order_TYPE_Request_Order_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Request_Order_TYPE_IsValid(int value);
constexpr Request_Order_TYPE Request_Order_TYPE_TYPE_MIN = Request_Order_TYPE_MEAL_DELIVERY;
constexpr Request_Order_TYPE Request_Order_TYPE_TYPE_MAX = Request_Order_TYPE_MEAL_RECEPTION;
constexpr int Request_Order_TYPE_TYPE_ARRAYSIZE = Request_Order_TYPE_TYPE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Request_Order_TYPE_descriptor();
template<typename T>
inline const std::string& Request_Order_TYPE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Request_Order_TYPE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Request_Order_TYPE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Request_Order_TYPE_descriptor(), enum_t_value);
}
inline bool Request_Order_TYPE_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Request_Order_TYPE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Request_Order_TYPE>(
    Request_Order_TYPE_descriptor(), name, value);
}
// ===================================================================

class Request_Order_Goods_Info PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_jobmanagement.Request_Order.Goods_Info) */ {
 public:
  inline Request_Order_Goods_Info() : Request_Order_Goods_Info(nullptr) {}
  virtual ~Request_Order_Goods_Info();
  explicit constexpr Request_Order_Goods_Info(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Request_Order_Goods_Info(const Request_Order_Goods_Info& from);
  Request_Order_Goods_Info(Request_Order_Goods_Info&& from) noexcept
    : Request_Order_Goods_Info() {
    *this = ::std::move(from);
  }

  inline Request_Order_Goods_Info& operator=(const Request_Order_Goods_Info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request_Order_Goods_Info& operator=(Request_Order_Goods_Info&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Request_Order_Goods_Info& default_instance() {
    return *internal_default_instance();
  }
  static inline const Request_Order_Goods_Info* internal_default_instance() {
    return reinterpret_cast<const Request_Order_Goods_Info*>(
               &_Request_Order_Goods_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Request_Order_Goods_Info& a, Request_Order_Goods_Info& b) {
    a.Swap(&b);
  }
  inline void Swap(Request_Order_Goods_Info* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request_Order_Goods_Info* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Request_Order_Goods_Info* New() const final {
    return CreateMaybeMessage<Request_Order_Goods_Info>(nullptr);
  }

  Request_Order_Goods_Info* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Request_Order_Goods_Info>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Request_Order_Goods_Info& from);
  void MergeFrom(const Request_Order_Goods_Info& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_Order_Goods_Info* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_jobmanagement.Request_Order.Goods_Info";
  }
  protected:
  explicit Request_Order_Goods_Info(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:grpc_jobmanagement.Request_Order.Goods_Info)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_jobmanagement_5fordermanagement_2eproto;
};
// -------------------------------------------------------------------

class Request_Order_Order_Data PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_jobmanagement.Request_Order.Order_Data) */ {
 public:
  inline Request_Order_Order_Data() : Request_Order_Order_Data(nullptr) {}
  virtual ~Request_Order_Order_Data();
  explicit constexpr Request_Order_Order_Data(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Request_Order_Order_Data(const Request_Order_Order_Data& from);
  Request_Order_Order_Data(Request_Order_Order_Data&& from) noexcept
    : Request_Order_Order_Data() {
    *this = ::std::move(from);
  }

  inline Request_Order_Order_Data& operator=(const Request_Order_Order_Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request_Order_Order_Data& operator=(Request_Order_Order_Data&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Request_Order_Order_Data& default_instance() {
    return *internal_default_instance();
  }
  static inline const Request_Order_Order_Data* internal_default_instance() {
    return reinterpret_cast<const Request_Order_Order_Data*>(
               &_Request_Order_Order_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Request_Order_Order_Data& a, Request_Order_Order_Data& b) {
    a.Swap(&b);
  }
  inline void Swap(Request_Order_Order_Data* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request_Order_Order_Data* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Request_Order_Order_Data* New() const final {
    return CreateMaybeMessage<Request_Order_Order_Data>(nullptr);
  }

  Request_Order_Order_Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Request_Order_Order_Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Request_Order_Order_Data& from);
  void MergeFrom(const Request_Order_Order_Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_Order_Order_Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_jobmanagement.Request_Order.Order_Data";
  }
  protected:
  explicit Request_Order_Order_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoodsInfoFieldNumber = 1,
    kGoodsPosFieldNumber = 2,
    kTargetPosFieldNumber = 3,
  };
  // .grpc_jobmanagement.Request_Order.Goods_Info goods_info = 1;
  bool has_goods_info() const;
  private:
  bool _internal_has_goods_info() const;
  public:
  void clear_goods_info();
  const ::grpc_jobmanagement::Request_Order_Goods_Info& goods_info() const;
  ::grpc_jobmanagement::Request_Order_Goods_Info* release_goods_info();
  ::grpc_jobmanagement::Request_Order_Goods_Info* mutable_goods_info();
  void set_allocated_goods_info(::grpc_jobmanagement::Request_Order_Goods_Info* goods_info);
  private:
  const ::grpc_jobmanagement::Request_Order_Goods_Info& _internal_goods_info() const;
  ::grpc_jobmanagement::Request_Order_Goods_Info* _internal_mutable_goods_info();
  public:
  void unsafe_arena_set_allocated_goods_info(
      ::grpc_jobmanagement::Request_Order_Goods_Info* goods_info);
  ::grpc_jobmanagement::Request_Order_Goods_Info* unsafe_arena_release_goods_info();

  // int32 goods_pos = 2;
  bool has_goods_pos() const;
  private:
  bool _internal_has_goods_pos() const;
  public:
  void clear_goods_pos();
  ::PROTOBUF_NAMESPACE_ID::int32 goods_pos() const;
  void set_goods_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_goods_pos() const;
  void _internal_set_goods_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 target_pos = 3;
  bool has_target_pos() const;
  private:
  bool _internal_has_target_pos() const;
  public:
  void clear_target_pos();
  ::PROTOBUF_NAMESPACE_ID::int32 target_pos() const;
  void set_target_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_pos() const;
  void _internal_set_target_pos(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpc_jobmanagement.Request_Order.Order_Data)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::grpc_jobmanagement::Request_Order_Goods_Info* goods_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 goods_pos_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_pos_;
  friend struct ::TableStruct_jobmanagement_5fordermanagement_2eproto;
};
// -------------------------------------------------------------------

class Request_Order PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_jobmanagement.Request_Order) */ {
 public:
  inline Request_Order() : Request_Order(nullptr) {}
  virtual ~Request_Order();
  explicit constexpr Request_Order(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Request_Order(const Request_Order& from);
  Request_Order(Request_Order&& from) noexcept
    : Request_Order() {
    *this = ::std::move(from);
  }

  inline Request_Order& operator=(const Request_Order& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request_Order& operator=(Request_Order&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Request_Order& default_instance() {
    return *internal_default_instance();
  }
  static inline const Request_Order* internal_default_instance() {
    return reinterpret_cast<const Request_Order*>(
               &_Request_Order_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Request_Order& a, Request_Order& b) {
    a.Swap(&b);
  }
  inline void Swap(Request_Order* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Request_Order* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Request_Order* New() const final {
    return CreateMaybeMessage<Request_Order>(nullptr);
  }

  Request_Order* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Request_Order>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Request_Order& from);
  void MergeFrom(const Request_Order& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_Order* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_jobmanagement.Request_Order";
  }
  protected:
  explicit Request_Order(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef Request_Order_Goods_Info Goods_Info;
  typedef Request_Order_Order_Data Order_Data;

  typedef Request_Order_TYPE TYPE;
  static constexpr TYPE MEAL_DELIVERY =
    Request_Order_TYPE_MEAL_DELIVERY;
  static constexpr TYPE MEAL_RECEPTION =
    Request_Order_TYPE_MEAL_RECEPTION;
  static inline bool TYPE_IsValid(int value) {
    return Request_Order_TYPE_IsValid(value);
  }
  static constexpr TYPE TYPE_MIN =
    Request_Order_TYPE_TYPE_MIN;
  static constexpr TYPE TYPE_MAX =
    Request_Order_TYPE_TYPE_MAX;
  static constexpr int TYPE_ARRAYSIZE =
    Request_Order_TYPE_TYPE_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TYPE_descriptor() {
    return Request_Order_TYPE_descriptor();
  }
  template<typename T>
  static inline const std::string& TYPE_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TYPE>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TYPE_Name.");
    return Request_Order_TYPE_Name(enum_t_value);
  }
  static inline bool TYPE_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      TYPE* value) {
    return Request_Order_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 3,
    kNumberFieldNumber = 1,
    kTypeFieldNumber = 2,
    kCarIdFieldNumber = 4,
  };
  // .grpc_jobmanagement.Request_Order.Order_Data data = 3;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::grpc_jobmanagement::Request_Order_Order_Data& data() const;
  ::grpc_jobmanagement::Request_Order_Order_Data* release_data();
  ::grpc_jobmanagement::Request_Order_Order_Data* mutable_data();
  void set_allocated_data(::grpc_jobmanagement::Request_Order_Order_Data* data);
  private:
  const ::grpc_jobmanagement::Request_Order_Order_Data& _internal_data() const;
  ::grpc_jobmanagement::Request_Order_Order_Data* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::grpc_jobmanagement::Request_Order_Order_Data* data);
  ::grpc_jobmanagement::Request_Order_Order_Data* unsafe_arena_release_data();

  // int32 number = 1;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::int32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .grpc_jobmanagement.Request_Order.TYPE type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::grpc_jobmanagement::Request_Order_TYPE type() const;
  void set_type(::grpc_jobmanagement::Request_Order_TYPE value);
  private:
  ::grpc_jobmanagement::Request_Order_TYPE _internal_type() const;
  void _internal_set_type(::grpc_jobmanagement::Request_Order_TYPE value);
  public:

  // int32 car_id = 4;
  bool has_car_id() const;
  private:
  bool _internal_has_car_id() const;
  public:
  void clear_car_id();
  ::PROTOBUF_NAMESPACE_ID::int32 car_id() const;
  void set_car_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_car_id() const;
  void _internal_set_car_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpc_jobmanagement.Request_Order)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::grpc_jobmanagement::Request_Order_Order_Data* data_;
  ::PROTOBUF_NAMESPACE_ID::int32 number_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::int32 car_id_;
  friend struct ::TableStruct_jobmanagement_5fordermanagement_2eproto;
};
// -------------------------------------------------------------------

class Reply_Act PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_jobmanagement.Reply_Act) */ {
 public:
  inline Reply_Act() : Reply_Act(nullptr) {}
  virtual ~Reply_Act();
  explicit constexpr Reply_Act(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Reply_Act(const Reply_Act& from);
  Reply_Act(Reply_Act&& from) noexcept
    : Reply_Act() {
    *this = ::std::move(from);
  }

  inline Reply_Act& operator=(const Reply_Act& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reply_Act& operator=(Reply_Act&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Reply_Act& default_instance() {
    return *internal_default_instance();
  }
  static inline const Reply_Act* internal_default_instance() {
    return reinterpret_cast<const Reply_Act*>(
               &_Reply_Act_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Reply_Act& a, Reply_Act& b) {
    a.Swap(&b);
  }
  inline void Swap(Reply_Act* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Reply_Act* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Reply_Act* New() const final {
    return CreateMaybeMessage<Reply_Act>(nullptr);
  }

  Reply_Act* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Reply_Act>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Reply_Act& from);
  void MergeFrom(const Reply_Act& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Reply_Act* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_jobmanagement.Reply_Act";
  }
  protected:
  explicit Reply_Act(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReplyActFieldNumber = 1,
  };
  // bool reply_act = 1;
  bool has_reply_act() const;
  private:
  bool _internal_has_reply_act() const;
  public:
  void clear_reply_act();
  bool reply_act() const;
  void set_reply_act(bool value);
  private:
  bool _internal_reply_act() const;
  void _internal_set_reply_act(bool value);
  public:

  // @@protoc_insertion_point(class_scope:grpc_jobmanagement.Reply_Act)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool reply_act_;
  friend struct ::TableStruct_jobmanagement_5fordermanagement_2eproto;
};
// -------------------------------------------------------------------

class Reply_Cancel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpc_jobmanagement.Reply_Cancel) */ {
 public:
  inline Reply_Cancel() : Reply_Cancel(nullptr) {}
  virtual ~Reply_Cancel();
  explicit constexpr Reply_Cancel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Reply_Cancel(const Reply_Cancel& from);
  Reply_Cancel(Reply_Cancel&& from) noexcept
    : Reply_Cancel() {
    *this = ::std::move(from);
  }

  inline Reply_Cancel& operator=(const Reply_Cancel& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reply_Cancel& operator=(Reply_Cancel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Reply_Cancel& default_instance() {
    return *internal_default_instance();
  }
  static inline const Reply_Cancel* internal_default_instance() {
    return reinterpret_cast<const Reply_Cancel*>(
               &_Reply_Cancel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Reply_Cancel& a, Reply_Cancel& b) {
    a.Swap(&b);
  }
  inline void Swap(Reply_Cancel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Reply_Cancel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Reply_Cancel* New() const final {
    return CreateMaybeMessage<Reply_Cancel>(nullptr);
  }

  Reply_Cancel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Reply_Cancel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Reply_Cancel& from);
  void MergeFrom(const Reply_Cancel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Reply_Cancel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpc_jobmanagement.Reply_Cancel";
  }
  protected:
  explicit Reply_Cancel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_jobmanagement_5fordermanagement_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReplyCancelFieldNumber = 1,
  };
  // bool reply_cancel = 1;
  bool has_reply_cancel() const;
  private:
  bool _internal_has_reply_cancel() const;
  public:
  void clear_reply_cancel();
  bool reply_cancel() const;
  void set_reply_cancel(bool value);
  private:
  bool _internal_reply_cancel() const;
  void _internal_set_reply_cancel(bool value);
  public:

  // @@protoc_insertion_point(class_scope:grpc_jobmanagement.Reply_Cancel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool reply_cancel_;
  friend struct ::TableStruct_jobmanagement_5fordermanagement_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request_Order_Goods_Info

// string name = 1;
inline bool Request_Order_Goods_Info::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Request_Order_Goods_Info::has_name() const {
  return _internal_has_name();
}
inline void Request_Order_Goods_Info::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Request_Order_Goods_Info::name() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.Goods_Info.name)
  return _internal_name();
}
inline void Request_Order_Goods_Info::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Request_Order.Goods_Info.name)
}
inline std::string* Request_Order_Goods_Info::mutable_name() {
  // @@protoc_insertion_point(field_mutable:grpc_jobmanagement.Request_Order.Goods_Info.name)
  return _internal_mutable_name();
}
inline const std::string& Request_Order_Goods_Info::_internal_name() const {
  return name_.Get();
}
inline void Request_Order_Goods_Info::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Request_Order_Goods_Info::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpc_jobmanagement.Request_Order.Goods_Info.name)
}
inline void Request_Order_Goods_Info::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpc_jobmanagement.Request_Order.Goods_Info.name)
}
inline void Request_Order_Goods_Info::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpc_jobmanagement.Request_Order.Goods_Info.name)
}
inline std::string* Request_Order_Goods_Info::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Request_Order_Goods_Info::release_name() {
  // @@protoc_insertion_point(field_release:grpc_jobmanagement.Request_Order.Goods_Info.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Request_Order_Goods_Info::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpc_jobmanagement.Request_Order.Goods_Info.name)
}

// -------------------------------------------------------------------

// Request_Order_Order_Data

// .grpc_jobmanagement.Request_Order.Goods_Info goods_info = 1;
inline bool Request_Order_Order_Data::_internal_has_goods_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || goods_info_ != nullptr);
  return value;
}
inline bool Request_Order_Order_Data::has_goods_info() const {
  return _internal_has_goods_info();
}
inline void Request_Order_Order_Data::clear_goods_info() {
  if (GetArena() == nullptr && goods_info_ != nullptr) {
    delete goods_info_;
  }
  goods_info_ = nullptr;
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::grpc_jobmanagement::Request_Order_Goods_Info& Request_Order_Order_Data::_internal_goods_info() const {
  const ::grpc_jobmanagement::Request_Order_Goods_Info* p = goods_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc_jobmanagement::Request_Order_Goods_Info&>(
      ::grpc_jobmanagement::_Request_Order_Goods_Info_default_instance_);
}
inline const ::grpc_jobmanagement::Request_Order_Goods_Info& Request_Order_Order_Data::goods_info() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.Order_Data.goods_info)
  return _internal_goods_info();
}
inline void Request_Order_Order_Data::unsafe_arena_set_allocated_goods_info(
    ::grpc_jobmanagement::Request_Order_Goods_Info* goods_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(goods_info_);
  }
  goods_info_ = goods_info;
  if (goods_info) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc_jobmanagement.Request_Order.Order_Data.goods_info)
}
inline ::grpc_jobmanagement::Request_Order_Goods_Info* Request_Order_Order_Data::release_goods_info() {
  _has_bits_[0] &= ~0x00000001u;
  ::grpc_jobmanagement::Request_Order_Goods_Info* temp = goods_info_;
  goods_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::grpc_jobmanagement::Request_Order_Goods_Info* Request_Order_Order_Data::unsafe_arena_release_goods_info() {
  // @@protoc_insertion_point(field_release:grpc_jobmanagement.Request_Order.Order_Data.goods_info)
  _has_bits_[0] &= ~0x00000001u;
  ::grpc_jobmanagement::Request_Order_Goods_Info* temp = goods_info_;
  goods_info_ = nullptr;
  return temp;
}
inline ::grpc_jobmanagement::Request_Order_Goods_Info* Request_Order_Order_Data::_internal_mutable_goods_info() {
  _has_bits_[0] |= 0x00000001u;
  if (goods_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc_jobmanagement::Request_Order_Goods_Info>(GetArena());
    goods_info_ = p;
  }
  return goods_info_;
}
inline ::grpc_jobmanagement::Request_Order_Goods_Info* Request_Order_Order_Data::mutable_goods_info() {
  // @@protoc_insertion_point(field_mutable:grpc_jobmanagement.Request_Order.Order_Data.goods_info)
  return _internal_mutable_goods_info();
}
inline void Request_Order_Order_Data::set_allocated_goods_info(::grpc_jobmanagement::Request_Order_Goods_Info* goods_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete goods_info_;
  }
  if (goods_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(goods_info);
    if (message_arena != submessage_arena) {
      goods_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, goods_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  goods_info_ = goods_info;
  // @@protoc_insertion_point(field_set_allocated:grpc_jobmanagement.Request_Order.Order_Data.goods_info)
}

// int32 goods_pos = 2;
inline bool Request_Order_Order_Data::_internal_has_goods_pos() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Request_Order_Order_Data::has_goods_pos() const {
  return _internal_has_goods_pos();
}
inline void Request_Order_Order_Data::clear_goods_pos() {
  goods_pos_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order_Order_Data::_internal_goods_pos() const {
  return goods_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order_Order_Data::goods_pos() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.Order_Data.goods_pos)
  return _internal_goods_pos();
}
inline void Request_Order_Order_Data::_internal_set_goods_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  goods_pos_ = value;
}
inline void Request_Order_Order_Data::set_goods_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_goods_pos(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Request_Order.Order_Data.goods_pos)
}

// int32 target_pos = 3;
inline bool Request_Order_Order_Data::_internal_has_target_pos() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Request_Order_Order_Data::has_target_pos() const {
  return _internal_has_target_pos();
}
inline void Request_Order_Order_Data::clear_target_pos() {
  target_pos_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order_Order_Data::_internal_target_pos() const {
  return target_pos_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order_Order_Data::target_pos() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.Order_Data.target_pos)
  return _internal_target_pos();
}
inline void Request_Order_Order_Data::_internal_set_target_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  target_pos_ = value;
}
inline void Request_Order_Order_Data::set_target_pos(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_pos(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Request_Order.Order_Data.target_pos)
}

// -------------------------------------------------------------------

// Request_Order

// int32 number = 1;
inline bool Request_Order::_internal_has_number() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Request_Order::has_number() const {
  return _internal_has_number();
}
inline void Request_Order::clear_number() {
  number_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order::number() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.number)
  return _internal_number();
}
inline void Request_Order::_internal_set_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  number_ = value;
}
inline void Request_Order::set_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Request_Order.number)
}

// .grpc_jobmanagement.Request_Order.TYPE type = 2;
inline bool Request_Order::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Request_Order::has_type() const {
  return _internal_has_type();
}
inline void Request_Order::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::grpc_jobmanagement::Request_Order_TYPE Request_Order::_internal_type() const {
  return static_cast< ::grpc_jobmanagement::Request_Order_TYPE >(type_);
}
inline ::grpc_jobmanagement::Request_Order_TYPE Request_Order::type() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.type)
  return _internal_type();
}
inline void Request_Order::_internal_set_type(::grpc_jobmanagement::Request_Order_TYPE value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
}
inline void Request_Order::set_type(::grpc_jobmanagement::Request_Order_TYPE value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Request_Order.type)
}

// .grpc_jobmanagement.Request_Order.Order_Data data = 3;
inline bool Request_Order::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || data_ != nullptr);
  return value;
}
inline bool Request_Order::has_data() const {
  return _internal_has_data();
}
inline void Request_Order::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::grpc_jobmanagement::Request_Order_Order_Data& Request_Order::_internal_data() const {
  const ::grpc_jobmanagement::Request_Order_Order_Data* p = data_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc_jobmanagement::Request_Order_Order_Data&>(
      ::grpc_jobmanagement::_Request_Order_Order_Data_default_instance_);
}
inline const ::grpc_jobmanagement::Request_Order_Order_Data& Request_Order::data() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.data)
  return _internal_data();
}
inline void Request_Order::unsafe_arena_set_allocated_data(
    ::grpc_jobmanagement::Request_Order_Order_Data* data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc_jobmanagement.Request_Order.data)
}
inline ::grpc_jobmanagement::Request_Order_Order_Data* Request_Order::release_data() {
  _has_bits_[0] &= ~0x00000001u;
  ::grpc_jobmanagement::Request_Order_Order_Data* temp = data_;
  data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::grpc_jobmanagement::Request_Order_Order_Data* Request_Order::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:grpc_jobmanagement.Request_Order.data)
  _has_bits_[0] &= ~0x00000001u;
  ::grpc_jobmanagement::Request_Order_Order_Data* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::grpc_jobmanagement::Request_Order_Order_Data* Request_Order::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc_jobmanagement::Request_Order_Order_Data>(GetArena());
    data_ = p;
  }
  return data_;
}
inline ::grpc_jobmanagement::Request_Order_Order_Data* Request_Order::mutable_data() {
  // @@protoc_insertion_point(field_mutable:grpc_jobmanagement.Request_Order.data)
  return _internal_mutable_data();
}
inline void Request_Order::set_allocated_data(::grpc_jobmanagement::Request_Order_Order_Data* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:grpc_jobmanagement.Request_Order.data)
}

// int32 car_id = 4;
inline bool Request_Order::_internal_has_car_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Request_Order::has_car_id() const {
  return _internal_has_car_id();
}
inline void Request_Order::clear_car_id() {
  car_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order::_internal_car_id() const {
  return car_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Request_Order::car_id() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Request_Order.car_id)
  return _internal_car_id();
}
inline void Request_Order::_internal_set_car_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  car_id_ = value;
}
inline void Request_Order::set_car_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_car_id(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Request_Order.car_id)
}

// -------------------------------------------------------------------

// Reply_Act

// bool reply_act = 1;
inline bool Reply_Act::_internal_has_reply_act() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Reply_Act::has_reply_act() const {
  return _internal_has_reply_act();
}
inline void Reply_Act::clear_reply_act() {
  reply_act_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool Reply_Act::_internal_reply_act() const {
  return reply_act_;
}
inline bool Reply_Act::reply_act() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Reply_Act.reply_act)
  return _internal_reply_act();
}
inline void Reply_Act::_internal_set_reply_act(bool value) {
  _has_bits_[0] |= 0x00000001u;
  reply_act_ = value;
}
inline void Reply_Act::set_reply_act(bool value) {
  _internal_set_reply_act(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Reply_Act.reply_act)
}

// -------------------------------------------------------------------

// Reply_Cancel

// bool reply_cancel = 1;
inline bool Reply_Cancel::_internal_has_reply_cancel() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Reply_Cancel::has_reply_cancel() const {
  return _internal_has_reply_cancel();
}
inline void Reply_Cancel::clear_reply_cancel() {
  reply_cancel_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool Reply_Cancel::_internal_reply_cancel() const {
  return reply_cancel_;
}
inline bool Reply_Cancel::reply_cancel() const {
  // @@protoc_insertion_point(field_get:grpc_jobmanagement.Reply_Cancel.reply_cancel)
  return _internal_reply_cancel();
}
inline void Reply_Cancel::_internal_set_reply_cancel(bool value) {
  _has_bits_[0] |= 0x00000001u;
  reply_cancel_ = value;
}
inline void Reply_Cancel::set_reply_cancel(bool value) {
  _internal_set_reply_cancel(value);
  // @@protoc_insertion_point(field_set:grpc_jobmanagement.Reply_Cancel.reply_cancel)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc_jobmanagement

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::grpc_jobmanagement::Request_Order_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grpc_jobmanagement::Request_Order_TYPE>() {
  return ::grpc_jobmanagement::Request_Order_TYPE_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_jobmanagement_5fordermanagement_2eproto

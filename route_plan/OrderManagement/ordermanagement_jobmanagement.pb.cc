// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ordermanagement_jobmanagement.proto

#include "ordermanagement_jobmanagement.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_ordermanagement {
constexpr Request_SetOrderState::Request_SetOrderState(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : number_(0)
  , type_(0)
{}
struct Request_SetOrderStateDefaultTypeInternal {
  constexpr Request_SetOrderStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Request_SetOrderStateDefaultTypeInternal() {}
  union {
    Request_SetOrderState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Request_SetOrderStateDefaultTypeInternal _Request_SetOrderState_default_instance_;
constexpr Reply_SetOrderState::Reply_SetOrderState(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reply_set_(false){}
struct Reply_SetOrderStateDefaultTypeInternal {
  constexpr Reply_SetOrderStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Reply_SetOrderStateDefaultTypeInternal() {}
  union {
    Reply_SetOrderState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Reply_SetOrderStateDefaultTypeInternal _Reply_SetOrderState_default_instance_;
}  // namespace grpc_ordermanagement
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ordermanagement_5fjobmanagement_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ordermanagement_5fjobmanagement_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ordermanagement_5fjobmanagement_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ordermanagement_5fjobmanagement_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Request_SetOrderState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Request_SetOrderState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Request_SetOrderState, number_),
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Request_SetOrderState, type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Reply_SetOrderState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Reply_SetOrderState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_ordermanagement::Reply_SetOrderState, reply_set_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::grpc_ordermanagement::Request_SetOrderState)},
  { 9, 15, sizeof(::grpc_ordermanagement::Reply_SetOrderState)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_ordermanagement::_Request_SetOrderState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_ordermanagement::_Reply_SetOrderState_default_instance_),
};

const char descriptor_table_protodef_ordermanagement_5fjobmanagement_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#ordermanagement_jobmanagement.proto\022\024g"
  "rpc_ordermanagement\"\245\001\n\025Request_SetOrder"
  "State\022\023\n\006number\030\001 \001(\005H\000\210\001\001\022C\n\004type\030\002 \001(\016"
  "20.grpc_ordermanagement.Request_SetOrder"
  "State.TYPEH\001\210\001\001\"\036\n\004TYPE\022\n\n\006FINISH\020\000\022\n\n\006C"
  "ANCEL\020\001B\t\n\007_numberB\007\n\005_type\";\n\023Reply_Set"
  "OrderState\022\026\n\treply_set\030\001 \001(\010H\000\210\001\001B\014\n\n_r"
  "eply_set2\222\001\n%OrderManagement_JobManageme"
  "nt_Service\022i\n\rSetOrderState\022+.grpc_order"
  "management.Request_SetOrderState\032).grpc_"
  "ordermanagement.Reply_SetOrderState\"\000b\006p"
  "roto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ordermanagement_5fjobmanagement_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ordermanagement_5fjobmanagement_2eproto = {
  false, false, 445, descriptor_table_protodef_ordermanagement_5fjobmanagement_2eproto, "ordermanagement_jobmanagement.proto", 
  &descriptor_table_ordermanagement_5fjobmanagement_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_ordermanagement_5fjobmanagement_2eproto::offsets,
  file_level_metadata_ordermanagement_5fjobmanagement_2eproto, file_level_enum_descriptors_ordermanagement_5fjobmanagement_2eproto, file_level_service_descriptors_ordermanagement_5fjobmanagement_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_ordermanagement_5fjobmanagement_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ordermanagement_5fjobmanagement_2eproto);
  return descriptor_table_ordermanagement_5fjobmanagement_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ordermanagement_5fjobmanagement_2eproto(&descriptor_table_ordermanagement_5fjobmanagement_2eproto);
namespace grpc_ordermanagement {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Request_SetOrderState_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ordermanagement_5fjobmanagement_2eproto);
  return file_level_enum_descriptors_ordermanagement_5fjobmanagement_2eproto[0];
}
bool Request_SetOrderState_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Request_SetOrderState_TYPE Request_SetOrderState::FINISH;
constexpr Request_SetOrderState_TYPE Request_SetOrderState::CANCEL;
constexpr Request_SetOrderState_TYPE Request_SetOrderState::TYPE_MIN;
constexpr Request_SetOrderState_TYPE Request_SetOrderState::TYPE_MAX;
constexpr int Request_SetOrderState::TYPE_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class Request_SetOrderState::_Internal {
 public:
  using HasBits = decltype(std::declval<Request_SetOrderState>()._has_bits_);
  static void set_has_number(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Request_SetOrderState::Request_SetOrderState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_ordermanagement.Request_SetOrderState)
}
Request_SetOrderState::Request_SetOrderState(const Request_SetOrderState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&number_, &from.number_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&number_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:grpc_ordermanagement.Request_SetOrderState)
}

void Request_SetOrderState::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&number_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&number_)) + sizeof(type_));
}

Request_SetOrderState::~Request_SetOrderState() {
  // @@protoc_insertion_point(destructor:grpc_ordermanagement.Request_SetOrderState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Request_SetOrderState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Request_SetOrderState::ArenaDtor(void* object) {
  Request_SetOrderState* _this = reinterpret_cast< Request_SetOrderState* >(object);
  (void)_this;
}
void Request_SetOrderState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Request_SetOrderState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Request_SetOrderState::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_ordermanagement.Request_SetOrderState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&number_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request_SetOrderState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_number(&has_bits);
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_ordermanagement.Request_SetOrderState.TYPE type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::grpc_ordermanagement::Request_SetOrderState_TYPE>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request_SetOrderState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_ordermanagement.Request_SetOrderState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (_internal_has_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_number(), target);
  }

  // .grpc_ordermanagement.Request_SetOrderState.TYPE type = 2;
  if (_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_ordermanagement.Request_SetOrderState)
  return target;
}

size_t Request_SetOrderState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_ordermanagement.Request_SetOrderState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // int32 number = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_number());
    }

    // .grpc_ordermanagement.Request_SetOrderState.TYPE type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_SetOrderState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_ordermanagement.Request_SetOrderState)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_SetOrderState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request_SetOrderState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_ordermanagement.Request_SetOrderState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_ordermanagement.Request_SetOrderState)
    MergeFrom(*source);
  }
}

void Request_SetOrderState::MergeFrom(const Request_SetOrderState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_ordermanagement.Request_SetOrderState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      number_ = from.number_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_SetOrderState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_ordermanagement.Request_SetOrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_SetOrderState::CopyFrom(const Request_SetOrderState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_ordermanagement.Request_SetOrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SetOrderState::IsInitialized() const {
  return true;
}

void Request_SetOrderState::InternalSwap(Request_SetOrderState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Request_SetOrderState, type_)
      + sizeof(Request_SetOrderState::type_)
      - PROTOBUF_FIELD_OFFSET(Request_SetOrderState, number_)>(
          reinterpret_cast<char*>(&number_),
          reinterpret_cast<char*>(&other->number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Request_SetOrderState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Reply_SetOrderState::_Internal {
 public:
  using HasBits = decltype(std::declval<Reply_SetOrderState>()._has_bits_);
  static void set_has_reply_set(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Reply_SetOrderState::Reply_SetOrderState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_ordermanagement.Reply_SetOrderState)
}
Reply_SetOrderState::Reply_SetOrderState(const Reply_SetOrderState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_set_ = from.reply_set_;
  // @@protoc_insertion_point(copy_constructor:grpc_ordermanagement.Reply_SetOrderState)
}

void Reply_SetOrderState::SharedCtor() {
reply_set_ = false;
}

Reply_SetOrderState::~Reply_SetOrderState() {
  // @@protoc_insertion_point(destructor:grpc_ordermanagement.Reply_SetOrderState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Reply_SetOrderState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Reply_SetOrderState::ArenaDtor(void* object) {
  Reply_SetOrderState* _this = reinterpret_cast< Reply_SetOrderState* >(object);
  (void)_this;
}
void Reply_SetOrderState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Reply_SetOrderState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Reply_SetOrderState::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_ordermanagement.Reply_SetOrderState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_set_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Reply_SetOrderState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool reply_set = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_reply_set(&has_bits);
          reply_set_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Reply_SetOrderState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_ordermanagement.Reply_SetOrderState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reply_set = 1;
  if (_internal_has_reply_set()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_reply_set(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_ordermanagement.Reply_SetOrderState)
  return target;
}

size_t Reply_SetOrderState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_ordermanagement.Reply_SetOrderState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool reply_set = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reply_SetOrderState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_ordermanagement.Reply_SetOrderState)
  GOOGLE_DCHECK_NE(&from, this);
  const Reply_SetOrderState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Reply_SetOrderState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_ordermanagement.Reply_SetOrderState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_ordermanagement.Reply_SetOrderState)
    MergeFrom(*source);
  }
}

void Reply_SetOrderState::MergeFrom(const Reply_SetOrderState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_ordermanagement.Reply_SetOrderState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_reply_set()) {
    _internal_set_reply_set(from._internal_reply_set());
  }
}

void Reply_SetOrderState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_ordermanagement.Reply_SetOrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply_SetOrderState::CopyFrom(const Reply_SetOrderState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_ordermanagement.Reply_SetOrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply_SetOrderState::IsInitialized() const {
  return true;
}

void Reply_SetOrderState::InternalSwap(Reply_SetOrderState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(reply_set_, other->reply_set_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Reply_SetOrderState::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_ordermanagement
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_ordermanagement::Request_SetOrderState* Arena::CreateMaybeMessage< ::grpc_ordermanagement::Request_SetOrderState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_ordermanagement::Request_SetOrderState >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_ordermanagement::Reply_SetOrderState* Arena::CreateMaybeMessage< ::grpc_ordermanagement::Reply_SetOrderState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_ordermanagement::Reply_SetOrderState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
